package com.find.largest.valid.string;

public class ValidBraces {

	public static int findLargestString(char[] arr, int start, int end, int left, int right){
		if(arr.length<1 || size(start,end)<=1) return union(left,right);
		
		else if(size(start,end)>=1 && checkValid(arr[start]) && left>0) 
			return arr[start]=='('?findLargestString(arr, start+1, end, left+1, right):findLargestString(arr, start+1, end, left, right+1);
		else if(size(start,end)>1 && checkValid(arr[start]) && left<1)
				return arr[start]=='('?findLargestString(arr, start+1, end, left+1, right):findLargestString(arr, start+1, end, left, right);
		else
		return  union(left,right);
	}
	public static int size(int start, int end){
		return end-start;
	}
	public static boolean checkValid(char a){
		return a=='('|| a==')';
	}
	public static int union(int left, int right){
		return 2*Math.min(left, right);
	}
	public static void main(String[] args){
		System.out.println("Find Largest SubString ");
		String str="()()(";
		char[] chr= str.toCharArray();
		int i= findLargestString(chr, 0, chr.length-1, 0, 0);
		System.out.println("The largest valid substring for "+ str+"= "+ i );
		str="(((()";
		chr=str.toCharArray();
		i= findLargestString(chr, 0, chr.length-1, 0, 0);
		System.out.println("The largest valid substring for "+ str+"= "+ i );
	}
}
