class PalindromicPermutation{
	public static void main(String[] args){
		String str=”nitin”;
		printPalindrome(str,””, 0);
	}
	public static void printPalindrome(String str, String subString, int pos){
		if(str==null || str.length<1 || pos>str.length-1) return;
		if(subString==null) subString=””;
		for(int i=pos;i<str.length();i++){
			if( isPalindrome(“”+str.charAt(i)) 
				System.out.println(str.charAt(i));
			printPalindrome(str, str.charAt(i), pos++);
			printPalindrome(str, substring+str.charAt(i),pos);
		}
	}
	public static boolean isPalindrome(String str){
		if(str==null || str.length()<1) return false;
		if(str.length()==1) return true;
		if (str.substring(0,(str.length()/2)).equals(reverse(str.substring((str.length()/2)/2, str.length()) return true;
	else return false;
		
	}
	public static boolean isOdd(String str){
		return str.length()%2==1;
	}
	public static String reverse(String str){
		StringBuffer s= new StringBuffer();
		for(int i=str.length()-1;i>=0;i--){
		s.append(str.charAt(i));
		}
		return s.toString();
	}
}
